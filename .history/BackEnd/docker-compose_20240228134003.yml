version: '3'

services:
    #PHP Service
    app:
        build:
            context: .
            dockerfile: ./php/Dockerfile
        image: laravel_php
        container_name: app-mop-api
        restart: unless-stopped
        depends_on:
            - db-postgres
        tty: true
        environment:
            SERVICE_NAME: app-mop-api
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./www:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network-mop-api

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver-mop-api
        restart: unless-stopped
        tty: true
        ports:
            - "8000:80"
        volumes:
            - ./www:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network-mop-api

    db-postgres:
        image: postgres
        environment:
            POSTGRES_USER: postgres
            POSTGRES_DB: web_mop
            POSTGRES_PASSWORD: mcrroot
        ports:
            - "5432:5432"
        volumes:
            - ./data:/var/lib/postgresql/data
            - ./db_script/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - app-network-mop-api

    db-pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
            PGADMIN_DEFAULT_PASSWORD: "PgAdmin"
        ports:
            - "16543:80"
        depends_on:
            - db-postgres
        networks:
            - app-network-mop-api

    # sonarqube:
    #     image: sonarqube
    #     expose:
    #         - 9000
    #     ports:
    #         - "127.0.0.1:9000:9000"
    #     networks:
    #         - sonarnet
    #     environment:
    #         - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
    #         - sonar.jdbc.username=sonar
    #         - sonar.jdbc.password=sonar
    #     volumes:
    #         - sonarqube_conf:/opt/sonarqube/conf
    #         - sonarqube_data:/opt/sonarqube/data
    #         - sonarqube_extensions:/opt/sonarqube/extensions
    #         - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

    # db:
    #     image: postgres
    #     networks:
    #         - sonarnet
    #     environment:
    #         - POSTGRES_USER=sonar
    #         - POSTGRES_PASSWORD=sonar
    #     volumes:
    #         - postgresql:/var/lib/postgresql
    #         - postgresql_data:/var/lib/postgresql/data

#Docker Networks
networks:
    app-network-mop-api:
        driver: bridge
    # sonarnet:

#Volumes
volumes:
    dbdata-mop-api:
        driver: local
    # sonarqube_conf:
    # sonarqube_data:
    # sonarqube_extensions:
    # sonarqube_bundled-plugins:
    postgresql:
    postgresql_data:
